{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yiuri\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\temp_lemonshot\\\\lemonshot-app2\\\\src\\\\pages\\\\CameraPage\\\\CameraPage.tsx\",\n  _s = $RefreshSig$();\n// CameraPage.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport NavBar from '../../components/NavBar.tsx';\nimport './CameraPage.css';\nimport edgeIcon from '../../assets/images/edge.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraPage = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\n  const {\n    name,\n    gender,\n    age,\n    contact,\n    contactType\n  } = location.state || {};\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === \"Space\" && !loading) {\n        capture();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [loading]);\n  const capture = async () => {\n    if (!webcamRef.current) return;\n    const screenshot = webcamRef.current.getScreenshot();\n    if (!screenshot) {\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\n      return;\n    }\n    setLoading(true);\n    setProgress(0);\n    setMessage(\"⏳ 얼굴 분석 중입니다...\");\n    try {\n      var _response$body;\n      const response = await fetch(\"http://localhost:5000/analyze_face_stream\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: screenshot,\n          name,\n          gender,\n          age,\n          contact,\n          contactType\n        })\n      });\n      const reader = (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n      const decoder = new TextDecoder(\"utf-8\");\n      if (!reader) throw new Error(\"서버 응답이 없습니다.\");\n      const readStream = async () => {\n        let done = false;\n        while (!done) {\n          const {\n            value,\n            done: readerDone\n          } = await reader.read();\n          if (value) {\n            const text = decoder.decode(value, {\n              stream: true\n            });\n            const lines = text.split('\\n\\n').filter(Boolean);\n            for (const line of lines) {\n              if (line.startsWith(\"data: \")) {\n                const json = JSON.parse(line.replace(\"data: \", \"\"));\n                if (json.progress !== undefined) setProgress(json.progress);\n                if (json.message) setMessage(json.message);\n                if (json.status === \"success\") {\n                  setTimeout(() => {\n                    navigate(\"/success\", {\n                      state: {\n                        name,\n                        gender,\n                        age,\n                        contact,\n                        contactType\n                      }\n                    });\n                  }, 1500);\n                  done = true;\n                  break;\n                }\n                if (json.error) {\n                  setMessage(`❌ ${json.error}`);\n                  done = true;\n                  break;\n                }\n              }\n            }\n          }\n          if (readerDone) break;\n        }\n      };\n      await readStream();\n    } catch (err) {\n      console.error(\"에러:\", err);\n      setMessage(\"❌ 분석 중 오류 발생.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-page\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: {\n          width: 1280,\n          height: 720,\n          facingMode: \"user\"\n        },\n        className: \"webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"capture-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: edgeIcon,\n          className: \"edge-icon top-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: edgeIcon,\n          className: \"edge-icon top-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: edgeIcon,\n          className: \"edge-icon bottom-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: edgeIcon,\n          className: \"edge-icon bottom-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader-progress\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraPage, \"foGqANXEFORiAmpdhmTiSdgXtEk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CameraPage;\nexport default CameraPage;\nvar _c;\n$RefreshReg$(_c, \"CameraPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","Webcam","NavBar","edgeIcon","jsxDEV","_jsxDEV","CameraPage","_s","webcamRef","navigate","location","loading","setLoading","progress","setProgress","message","setMessage","name","gender","age","contact","contactType","state","handleKeyDown","e","code","capture","window","addEventListener","removeEventListener","current","screenshot","getScreenshot","_response$body","response","fetch","method","headers","body","JSON","stringify","image","reader","getReader","decoder","TextDecoder","Error","readStream","done","value","readerDone","read","text","decode","stream","lines","split","filter","Boolean","line","startsWith","json","parse","replace","undefined","status","setTimeout","error","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","videoConstraints","width","height","facingMode","src","style","_c","$RefreshReg$"],"sources":["C:/Users/yiuri/OneDrive/문서/GitHub/temp_lemonshot/lemonshot-app2/src/pages/CameraPage/CameraPage.tsx"],"sourcesContent":["// CameraPage.tsx\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport NavBar from '../../components/NavBar.tsx';\r\nimport './CameraPage.css';\r\nimport edgeIcon from '../../assets/images/edge.svg';\r\n\r\nconst CameraPage = () => {\r\n  const webcamRef = useRef<Webcam>(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\r\n  const { name, gender, age, contact, contactType } = location.state || {};\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.code === \"Space\" && !loading) {\r\n        capture();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [loading]);\r\n\r\n  const capture = async () => {\r\n    if (!webcamRef.current) return;\r\n    const screenshot = webcamRef.current.getScreenshot();\r\n    if (!screenshot) {\r\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setProgress(0);\r\n    setMessage(\"⏳ 얼굴 분석 중입니다...\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/analyze_face_stream\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          image: screenshot,\r\n          name,\r\n          gender,\r\n          age,\r\n          contact,\r\n          contactType\r\n        })\r\n      });\r\n\r\n      const reader = response.body?.getReader();\r\n      const decoder = new TextDecoder(\"utf-8\");\r\n\r\n      if (!reader) throw new Error(\"서버 응답이 없습니다.\");\r\n\r\n      const readStream = async () => {\r\n        let done = false;\r\n        while (!done) {\r\n          const { value, done: readerDone } = await reader.read();\r\n          if (value) {\r\n            const text = decoder.decode(value, { stream: true });\r\n            const lines = text.split('\\n\\n').filter(Boolean);\r\n\r\n            for (const line of lines) {\r\n              if (line.startsWith(\"data: \")) {\r\n                const json = JSON.parse(line.replace(\"data: \", \"\"));\r\n                if (json.progress !== undefined) setProgress(json.progress);\r\n                if (json.message) setMessage(json.message);\r\n                if (json.status === \"success\") {\r\n                  setTimeout(() => {\r\n                    navigate(\"/success\", {\r\n                      state: { name, gender, age, contact, contactType }\r\n                    });\r\n                  }, 1500);\r\n                  done = true;\r\n                  break;\r\n                }\r\n                if (json.error) {\r\n                  setMessage(`❌ ${json.error}`);\r\n                  done = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (readerDone) break;\r\n        }\r\n      };\r\n\r\n      await readStream();\r\n    } catch (err) {\r\n      console.error(\"에러:\", err);\r\n      setMessage(\"❌ 분석 중 오류 발생.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-wrapper\">\r\n      <NavBar />\r\n      <div className=\"camera-page\">\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          videoConstraints={{ width: 1280, height: 720, facingMode: \"user\" }}\r\n          className=\"webcam\"\r\n        />\r\n\r\n        <div className=\"capture-area\">\r\n          <img src={edgeIcon} className=\"edge-icon top-left\" />\r\n          <img src={edgeIcon} className=\"edge-icon top-right\" />\r\n          <img src={edgeIcon} className=\"edge-icon bottom-right\" />\r\n          <img src={edgeIcon} className=\"edge-icon bottom-left\" />\r\n        </div>\r\n\r\n        <div className=\"overlay\" />\r\n\r\n        <p className=\"message\">{message}</p>\r\n\r\n        {loading && (\r\n          <div className=\"loader\">\r\n            <div className=\"loader-progress\" style={{ width: `${progress}%` }} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}