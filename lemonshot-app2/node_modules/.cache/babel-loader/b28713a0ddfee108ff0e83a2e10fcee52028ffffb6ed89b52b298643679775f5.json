{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yiuri\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\temp_lemonshot\\\\lemonshot-app2\\\\src\\\\pages\\\\CameraPage\\\\CameraPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport NavBar from '../../components/NavBar.tsx';\nimport './CameraPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraPage = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\n  const {\n    name,\n    gender,\n    age,\n    contact,\n    contactType\n  } = location.state || {};\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === \"Space\" && !loading) {\n        capture();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [loading]);\n  useEffect(() => {\n    let interval;\n    if (loading) {\n      setProgress(0);\n      interval = setInterval(() => {\n        setProgress(old => {\n          if (old >= 100) {\n            clearInterval(interval);\n            return 100;\n          }\n          return old + 2;\n        });\n      }, 50);\n    } else {\n      setProgress(0);\n    }\n    return () => clearInterval(interval);\n  }, [loading]);\n  const capture = async () => {\n    if (!webcamRef.current) return;\n    const screenshot = webcamRef.current.getScreenshot();\n    if (!screenshot) {\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\n      return;\n    }\n    setLoading(true);\n    setMessage(\"⏳ 얼굴 분석 중입니다...\");\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze_face\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: screenshot,\n          name,\n          gender,\n          age,\n          contact,\n          contactType\n        })\n      });\n      const result = await response.json();\n      if (result.status === \"success\") {\n        setMessage(\"✅ 벡터 분석 완료! 이동합니다...\");\n        setTimeout(() => {\n          navigate(\"/success\", {\n            state: {\n              name,\n              gender,\n              age,\n              contact,\n              contactType\n            } // ✅ 정보 전달!\n          });\n        }, 1500);\n      } else {\n        setMessage(\"❌ 분석 실패: 얼굴을 찾을 수 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"서버 오류:\", error);\n      setMessage(\"❌ 서버 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-page\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: {\n          width: 1280,\n          height: 720,\n          facingMode: \"user\"\n        },\n        className: \"webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"capture-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader-progress\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraPage, \"ypPUfiTqsKjNMDR+Gru8cvmDMtk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CameraPage;\nexport default CameraPage;\nvar _c;\n$RefreshReg$(_c, \"CameraPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","Webcam","NavBar","jsxDEV","_jsxDEV","CameraPage","_s","webcamRef","navigate","location","loading","setLoading","progress","setProgress","message","setMessage","name","gender","age","contact","contactType","state","handleKeyDown","e","code","capture","window","addEventListener","removeEventListener","interval","setInterval","old","clearInterval","current","screenshot","getScreenshot","response","fetch","method","headers","body","JSON","stringify","image","result","json","status","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","videoConstraints","width","height","facingMode","style","_c","$RefreshReg$"],"sources":["C:/Users/yiuri/OneDrive/문서/GitHub/temp_lemonshot/lemonshot-app2/src/pages/CameraPage/CameraPage.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport NavBar from '../../components/NavBar.tsx';\r\nimport './CameraPage.css';\r\n\r\nconst CameraPage = () => {\r\n  const webcamRef = useRef<Webcam>(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\r\n  const { name, gender, age, contact, contactType } = location.state || {};\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.code === \"Space\" && !loading) {\r\n        capture();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (loading) {\r\n      setProgress(0);\r\n      interval = setInterval(() => {\r\n        setProgress((old) => {\r\n          if (old >= 100) {\r\n            clearInterval(interval);\r\n            return 100;\r\n          }\r\n          return old + 2;\r\n        });\r\n      }, 50);\r\n    } else {\r\n      setProgress(0);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [loading]);\r\n\r\n  const capture = async () => {\r\n    if (!webcamRef.current) return;\r\n\r\n    const screenshot = webcamRef.current.getScreenshot();\r\n\r\n    if (!screenshot) {\r\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage(\"⏳ 얼굴 분석 중입니다...\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/analyze_face\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          image: screenshot,\r\n          name,\r\n          gender,\r\n          age,\r\n          contact,\r\n          contactType\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.status === \"success\") {\r\n        setMessage(\"✅ 벡터 분석 완료! 이동합니다...\");\r\n        setTimeout(() => {\r\n          navigate(\"/success\", {\r\n            state: { name, gender, age, contact, contactType }  // ✅ 정보 전달!\r\n          });\r\n        }, 1500);\r\n      } else {\r\n        setMessage(\"❌ 분석 실패: 얼굴을 찾을 수 없습니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"서버 오류:\", error);\r\n      setMessage(\"❌ 서버 오류가 발생했습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-wrapper\">\r\n      <NavBar />\r\n\r\n      <div className=\"camera-page\">\r\n\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          videoConstraints={{ width: 1280, height: 720, facingMode: \"user\" }}\r\n          className=\"webcam\"\r\n        />\r\n\r\n        <div className=\"capture-area\" />\r\n\r\n        <div className=\"overlay\" />\r\n\r\n        <p className=\"message\">{message}</p>\r\n\r\n        {loading && (\r\n          <div className=\"loader\">\r\n            <div\r\n              className=\"loader-progress\"\r\n              style={{ width: `${progress}%` }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}