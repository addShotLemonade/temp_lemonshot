{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yiuri\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\temp_lemonshot\\\\lemonshot-app2\\\\src\\\\pages\\\\CameraPage\\\\CameraPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport NavBar from '../../components/NavBar.tsx';\nimport './CameraPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraPage = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0); // 로딩 진행률 상태\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\n  const {\n    name,\n    gender,\n    age,\n    contact,\n    contactType\n  } = location.state || {};\n\n  // 스페이스바 눌렀을 때 캡처 실행\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === \"Space\" && !loading) {\n        capture();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [loading]);\n\n  // 진행률 애니메이션 (0% -> 100% 빠르게)\n  useEffect(() => {\n    let interval;\n    if (loading) {\n      setProgress(0);\n      interval = setInterval(() => {\n        setProgress(old => {\n          if (old >= 100) {\n            clearInterval(interval);\n            return 100;\n          }\n          return old + 2; // 2%씩 증가, 원하는 속도로 조절 가능\n        });\n      }, 50);\n    } else {\n      setProgress(0);\n    }\n    return () => clearInterval(interval);\n  }, [loading]);\n\n  // 얼굴 캡처 후 서버로 전송\n  const capture = async () => {\n    if (!webcamRef.current) return;\n    const screenshot = webcamRef.current.getScreenshot();\n    if (!screenshot) {\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\n      return;\n    }\n    setLoading(true);\n    setMessage(\"⏳ 얼굴 분석 중입니다...\");\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze_face\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: screenshot,\n          name,\n          gender,\n          age,\n          contact,\n          contactType\n        })\n      });\n      const result = await response.json();\n      if (result.status === \"success\") {\n        setMessage(\"✅ 벡터 분석 완료! 이동합니다...\");\n        setTimeout(() => navigate(\"/success\"), 1500);\n      } else {\n        setMessage(\"❌ 분석 실패: 얼굴을 찾을 수 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"서버 오류:\", error);\n      setMessage(\"❌ 서버 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-page\",\n      style: {\n        position: 'relative',\n        width: '100vw',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          position: 'absolute',\n          top: 10,\n          left: 20,\n          zIndex: 10,\n          color: 'white'\n        },\n        children: \"Camera Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: {\n          width: 1280,\n          height: 720,\n          facingMode: \"user\"\n        },\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100vw\",\n          height: \"100vh\",\n          objectFit: \"cover\",\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          width: 300,\n          height: 300,\n          transform: \"translate(-50%, -50%)\",\n          border: \"3px solid #00ff00\",\n          zIndex: 3,\n          pointerEvents: \"none\",\n          borderRadius: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100vw\",\n          height: \"100vh\",\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n          zIndex: 2,\n          pointerEvents: \"none\",\n          clipPath: \"polygon(\" + \"0% 0%, 100% 0%, 100% 100%, 0% 100%, \" +\n          // 전체 화면\n          \"0% 0%, 0% 100%, 100% 100%, 100% 0%, \" +\n          // (겹치는걸 무시하고)\n          `calc(50% - 150px) calc(50% - 150px), ` + `calc(50% + 150px) calc(50% - 150px), ` + `calc(50% + 150px) calc(50% + 150px), ` + `calc(50% - 150px) calc(50% + 150px)` + \")\",\n          mixBlendMode: \"multiply\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        style: {\n          position: 'absolute',\n          bottom: 20,\n          left: '50%',\n          transform: 'translateX(-50%)',\n          color: 'white',\n          fontSize: 18,\n          zIndex: 10,\n          textShadow: '0 0 5px black',\n          margin: 0\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 60,\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          width: 300,\n          height: 20,\n          backgroundColor: \"#333\",\n          borderRadius: 10,\n          overflow: \"hidden\",\n          zIndex: 10,\n          boxShadow: \"0 0 10px #00ff00\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100%\",\n            width: `${progress}%`,\n            backgroundColor: \"#00ff00\",\n            borderRadius: 10,\n            transition: \"width 0.1s linear\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CameraPage, \"ypPUfiTqsKjNMDR+Gru8cvmDMtk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CameraPage;\nexport default CameraPage;\nvar _c;\n$RefreshReg$(_c, \"CameraPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","Webcam","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraPage","_s","webcamRef","navigate","location","loading","setLoading","progress","setProgress","message","setMessage","name","gender","age","contact","contactType","state","handleKeyDown","e","code","capture","window","addEventListener","removeEventListener","interval","setInterval","old","clearInterval","current","screenshot","getScreenshot","response","fetch","method","headers","body","JSON","stringify","image","result","json","status","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","position","width","height","top","left","zIndex","color","audio","ref","screenshotFormat","videoConstraints","facingMode","objectFit","transform","border","pointerEvents","borderRadius","backgroundColor","clipPath","mixBlendMode","bottom","fontSize","textShadow","margin","overflow","boxShadow","transition","_c","$RefreshReg$"],"sources":["C:/Users/yiuri/OneDrive/문서/GitHub/temp_lemonshot/lemonshot-app2/src/pages/CameraPage/CameraPage.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport NavBar from '../../components/NavBar.tsx';\r\nimport './CameraPage.css';\r\n\r\nconst CameraPage = () => {\r\n  const webcamRef = useRef<Webcam>(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0); // 로딩 진행률 상태\r\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\r\n  const { name, gender, age, contact, contactType } = location.state || {};\r\n\r\n  // 스페이스바 눌렀을 때 캡처 실행\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.code === \"Space\" && !loading) {\r\n        capture();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [loading]);\r\n\r\n  // 진행률 애니메이션 (0% -> 100% 빠르게)\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (loading) {\r\n      setProgress(0);\r\n      interval = setInterval(() => {\r\n        setProgress((old) => {\r\n          if (old >= 100) {\r\n            clearInterval(interval);\r\n            return 100;\r\n          }\r\n          return old + 2; // 2%씩 증가, 원하는 속도로 조절 가능\r\n        });\r\n      }, 50);\r\n    } else {\r\n      setProgress(0);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [loading]);\r\n\r\n  // 얼굴 캡처 후 서버로 전송\r\n  const capture = async () => {\r\n    if (!webcamRef.current) return;\r\n\r\n    const screenshot = webcamRef.current.getScreenshot();\r\n\r\n    if (!screenshot) {\r\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage(\"⏳ 얼굴 분석 중입니다...\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/analyze_face\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          image: screenshot,\r\n          name,\r\n          gender,\r\n          age,\r\n          contact,\r\n          contactType\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.status === \"success\") {\r\n        setMessage(\"✅ 벡터 분석 완료! 이동합니다...\");\r\n        setTimeout(() => navigate(\"/success\"), 1500);\r\n      } else {\r\n        setMessage(\"❌ 분석 실패: 얼굴을 찾을 수 없습니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"서버 오류:\", error);\r\n      setMessage(\"❌ 서버 오류가 발생했습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n\r\n      <div className=\"camera-page\" style={{ position: 'relative', width: '100vw', height: '100vh' }}>\r\n        <h2 style={{ position: 'absolute', top: 10, left: 20, zIndex: 10, color: 'white' }}>Camera Page</h2>\r\n\r\n        {/* 웹캠 화면 꽉 채우기 */}\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          videoConstraints={{ width: 1280, height: 720, facingMode: \"user\" }}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            objectFit: \"cover\",\r\n            zIndex: 1,\r\n          }}\r\n        />\r\n\r\n        {/* 캡처 영역 표시 (중앙 300x300) */}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            width: 300,\r\n            height: 300,\r\n            transform: \"translate(-50%, -50%)\",\r\n            border: \"3px solid #00ff00\",\r\n            zIndex: 3,\r\n            pointerEvents: \"none\",\r\n            borderRadius: 10,\r\n          }}\r\n        />\r\n\r\n        {/* 오버레이 - 캡처 영역 제외 나머지 반투명 검정 */}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n            zIndex: 2,\r\n            pointerEvents: \"none\",\r\n            clipPath: \"polygon(\" +\r\n              \"0% 0%, 100% 0%, 100% 100%, 0% 100%, \" + // 전체 화면\r\n              \"0% 0%, 0% 100%, 100% 100%, 100% 0%, \" + // (겹치는걸 무시하고)\r\n              `calc(50% - 150px) calc(50% - 150px), ` +\r\n              `calc(50% + 150px) calc(50% - 150px), ` +\r\n              `calc(50% + 150px) calc(50% + 150px), ` +\r\n              `calc(50% - 150px) calc(50% + 150px)` +\r\n              \")\",\r\n            mixBlendMode: \"multiply\",\r\n          }}\r\n        />\r\n\r\n        {/* 메시지 */}\r\n        <p\r\n          className=\"message\"\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: 20,\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            color: 'white',\r\n            fontSize: 18,\r\n            zIndex: 10,\r\n            textShadow: '0 0 5px black',\r\n            margin: 0,\r\n          }}\r\n        >\r\n          {message}\r\n        </p>\r\n\r\n        {/* 로딩바 */}\r\n        {loading && (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: 60,\r\n              left: \"50%\",\r\n              transform: \"translateX(-50%)\",\r\n              width: 300,\r\n              height: 20,\r\n              backgroundColor: \"#333\",\r\n              borderRadius: 10,\r\n              overflow: \"hidden\",\r\n              zIndex: 10,\r\n              boxShadow: \"0 0 10px #00ff00\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"100%\",\r\n                width: `${progress}%`,\r\n                backgroundColor: \"#00ff00\",\r\n                borderRadius: 10,\r\n                transition: \"width 0.1s linear\",\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CameraPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}