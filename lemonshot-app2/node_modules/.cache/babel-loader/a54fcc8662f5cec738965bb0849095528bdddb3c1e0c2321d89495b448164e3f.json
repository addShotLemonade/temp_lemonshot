{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yiuri\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\temp_lemonshot\\\\lemonshot-app2\\\\src\\\\pages\\\\IdealWorldcupPage\\\\IdealWorldcupPage.tsx\",\n  _s = $RefreshSig$();\n// C:\\Users\\yiuri\\OneDrive\\문서\\GitHub\\temp_lemonshot\\lemonshot-app2\\src\\pages\\IdealWorldcupPage\\IdealWorldcupPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport IdealMatchFrame from '../../components/IdealMatchFrame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 테스트용 후보 -> TODO: 이거 다른 파일에 정리하기\nconst maleCandidates = [{\n  name: '송강',\n  image: '/images/male/송강.png'\n}, {\n  name: '변우석',\n  image: '/images/male/변우석.png'\n}, {\n  name: '김영광',\n  image: '/images/male/김영광.png'\n}, {\n  name: '김선호',\n  image: '/images/male/김선호.png'\n}, {\n  name: '정해인',\n  image: '/images/female/정해인.png'\n}, {\n  name: '박보검',\n  image: '/images/female/박보검.png'\n}];\nconst femaleCandidates = [{\n  name: '아이유',\n  image: '/images/female/아이유.png'\n}, {\n  name: '장원영',\n  image: '/images/female/장원영.png'\n}, {\n  name: '카리나',\n  image: '/images/female/카리나.png'\n}, {\n  name: '박보영',\n  image: '/images/female/박보영.png'\n}, {\n  name: '한소희',\n  image: '/images/female/한소희.png'\n}, {\n  name: '설윤',\n  image: '/images/female/설윤.png'\n}];\n\n// 셔플 함수\nconst shuffle = array => [...array].sort(() => Math.random() - 0.5);\nconst IdealWorldcupPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    name,\n    gender,\n    age,\n    contact,\n    contactType\n  } = location.state || {};\n  const [candidates, setCandidates] = useState([]);\n  const [round, setRound] = useState(0);\n  const [winners, setWinners] = useState([]);\n  useEffect(() => {\n    console.log('넘어온 정보:', name, gender, age, contact, contactType);\n    const loadCandidates = async () => {\n      if (!gender) return;\n      const opponentGender = gender === 'female' ? 'male' : 'female';\n      try {\n        const response = await fetch(`/data/candidates_${opponentGender}.json`);\n        const data = await response.json();\n        setCandidates(shuffle(data).slice(0, 64)); // 원하는 라운드 수만큼 자르기\n        setRound(0);\n        setWinners([]);\n      } catch (error) {\n        console.error('후보 불러오기 실패:', error);\n      }\n    };\n    loadCandidates();\n  }, [gender]);\n  const handleSelect = winner => {\n    const nextWinners = [...winners, winner];\n    const nextRound = round + 2;\n    if (nextRound >= candidates.length) {\n      if (nextWinners.length === 1) {\n        const finalWinner = nextWinners[0];\n\n        // Flask 서버에 이상형 POST 요청\n        fetch('http://127.0.0.1:5000/save_ideal_choice', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name,\n            idealCelebrityName: finalWinner.name // 또는 finalWinner.image\n          })\n        }).then(() => {\n          navigate('/final', {\n            state: {\n              winner: finalWinner\n            }\n          });\n        }).catch(err => console.error('POST 실패:', err));\n      } else {\n        setCandidates(nextWinners);\n        setWinners([]);\n        setRound(0);\n      }\n    } else {\n      setWinners(nextWinners);\n      setRound(nextRound);\n    }\n  };\n  if (candidates.length < 2) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 37\n  }, this);\n  const left = candidates[round];\n  const right = candidates[round + 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC774\\uC0C1\\uD615 \\uC6D4\\uB4DC\\uCEF5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IdealMatchFrame, {\n      left: left,\n      right: right,\n      onSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [candidates.length, \"\\uAC15 - \", Math.floor(round / 2) + 1, \"\\uBC88\\uC9F8 \\uB300\\uACB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(IdealWorldcupPage, \"QUjgoM5haGOmtkZDDQyOKCCdVSs=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = IdealWorldcupPage;\nexport default IdealWorldcupPage;\nvar _c;\n$RefreshReg$(_c, \"IdealWorldcupPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","IdealMatchFrame","jsxDEV","_jsxDEV","maleCandidates","name","image","femaleCandidates","shuffle","array","sort","Math","random","IdealWorldcupPage","_s","navigate","location","gender","age","contact","contactType","state","candidates","setCandidates","round","setRound","winners","setWinners","console","log","loadCandidates","opponentGender","response","fetch","data","json","slice","error","handleSelect","winner","nextWinners","nextRound","length","finalWinner","method","headers","body","JSON","stringify","idealCelebrityName","then","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","left","right","onSelect","floor","_c","$RefreshReg$"],"sources":["C:/Users/yiuri/OneDrive/문서/GitHub/temp_lemonshot/lemonshot-app2/src/pages/IdealWorldcupPage/IdealWorldcupPage.tsx"],"sourcesContent":["// C:\\Users\\yiuri\\OneDrive\\문서\\GitHub\\temp_lemonshot\\lemonshot-app2\\src\\pages\\IdealWorldcupPage\\IdealWorldcupPage.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport IdealMatchFrame from '../../components/IdealMatchFrame'; \r\n\r\n\r\ntype Candidate = {\r\n  name: string;\r\n  image: string;\r\n};\r\n\r\n// 테스트용 후보 -> TODO: 이거 다른 파일에 정리하기\r\nconst maleCandidates: Candidate[] = [\r\n  { name: '송강', image: '/images/male/송강.png' },\r\n  { name: '변우석', image: '/images/male/변우석.png' },\r\n  { name: '김영광', image: '/images/male/김영광.png' },\r\n  { name: '김선호', image: '/images/male/김선호.png' },\r\n  { name: '정해인', image: '/images/female/정해인.png' },\r\n  { name: '박보검', image: '/images/female/박보검.png' },\r\n];\r\nconst femaleCandidates: Candidate[] = [\r\n  { name: '아이유', image: '/images/female/아이유.png' },\r\n  { name: '장원영', image: '/images/female/장원영.png' },\r\n  { name: '카리나', image: '/images/female/카리나.png' },\r\n  { name: '박보영', image: '/images/female/박보영.png' },\r\n  { name: '한소희', image: '/images/female/한소희.png' },\r\n  { name: '설윤', image: '/images/female/설윤.png' },\r\n];\r\n\r\n// 셔플 함수\r\nconst shuffle = (array: Candidate[]) => [...array].sort(() => Math.random() - 0.5);\r\n\r\nconst IdealWorldcupPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { name, gender, age, contact, contactType } = location.state || {};\r\n\r\n  const [candidates, setCandidates] = useState<Candidate[]>([]);\r\n  const [round, setRound] = useState(0);\r\n  const [winners, setWinners] = useState<Candidate[]>([]);\r\n\r\n  useEffect(() => {\r\n    console.log('넘어온 정보:', name, gender, age, contact, contactType);\r\n\r\n    const loadCandidates = async () => {\r\n      if (!gender) return;\r\n      const opponentGender = gender === 'female' ? 'male' : 'female';\r\n\r\n      try {\r\n        const response = await fetch(`/data/candidates_${opponentGender}.json`);\r\n        const data: Candidate[] = await response.json();\r\n        setCandidates(shuffle(data).slice(0, 64)); // 원하는 라운드 수만큼 자르기\r\n        setRound(0);\r\n        setWinners([]);\r\n      } catch (error) {\r\n        console.error('후보 불러오기 실패:', error);\r\n      }\r\n    };\r\n\r\n    loadCandidates();\r\n  }, [gender]);\r\n\r\n  const handleSelect = (winner: Candidate) => {\r\n    const nextWinners = [...winners, winner];\r\n    const nextRound = round + 2;\r\n\r\n    if (nextRound >= candidates.length) {\r\n      if (nextWinners.length === 1) {\r\n        const finalWinner = nextWinners[0];\r\n\r\n        // Flask 서버에 이상형 POST 요청\r\n        fetch('http://127.0.0.1:5000/save_ideal_choice', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            name,\r\n            idealCelebrityName: finalWinner.name, // 또는 finalWinner.image\r\n          }),\r\n        }).then(() => {\r\n          navigate('/final', { state: { winner: finalWinner } });\r\n        }).catch(err => console.error('POST 실패:', err));\r\n      } else {\r\n        setCandidates(nextWinners);\r\n        setWinners([]);\r\n        setRound(0);\r\n      }\r\n    } else {\r\n      setWinners(nextWinners);\r\n      setRound(nextRound);\r\n    }\r\n  };\r\n\r\n  if (candidates.length < 2) return <div>Loading...</div>;\r\n\r\n  const left = candidates[round];\r\n  const right = candidates[round + 1];\r\n\r\n  return (\r\n    <div>\r\n      <h2>이상형 월드컵</h2>\r\n      <IdealMatchFrame left={left} right={right} onSelect={handleSelect} />\r\n      <p>{candidates.length}강 - {Math.floor(round / 2) + 1}번째 대결</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IdealWorldcupPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}