{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yiuri\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\temp_lemonshot\\\\lemonshot-app2\\\\src\\\\pages\\\\CameraPage\\\\CameraPage.tsx\",\n  _s = $RefreshSig$();\n// CameraPage.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport NavBar from '../../components/NavBar.tsx';\nimport './CameraPage.css';\nimport edgeIcon from '../../assets/images/edge.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraPage = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\n  const {\n    name,\n    gender,\n    age,\n    contact,\n    contactType\n  } = location.state || {};\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === \"Space\" && !loading) {\n        capture();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [loading]);\n  const capture = async () => {\n    if (!webcamRef.current) return;\n    const screenshot = webcamRef.current.getScreenshot();\n    if (!screenshot) {\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\n      return;\n    }\n    setLoading(true);\n    setMessage(\"⏳ 로딩중...\");\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze_face\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: screenshot,\n          name,\n          gender,\n          age,\n          contact,\n          contactType\n        })\n      });\n      const result = await response.json();\n      if (result.status === \"success\") {\n        setMessage(\"✅ 로딩 완료!\");\n        setTimeout(() => {\n          navigate(\"/success\", {\n            state: {\n              name,\n              gender,\n              age,\n              contact,\n              contactType\n            }\n          });\n        }, 1500);\n      } else {\n        setMessage(\"❌ 분석 실패: 얼굴을 찾을 수 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"서버 오류:\", error);\n      setMessage(\"❌ 서버 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"camera-page-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-page\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: {\n          width: 1280,\n          height: 720,\n          facingMode: \"user\"\n        },\n        className: \"webcam\",\n        mirrored: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"capture-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: edgeIcon,\n          className: \"edge-icon top-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: edgeIcon,\n          className: \"edge-icon top-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: edgeIcon,\n          className: \"edge-icon bottom-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: edgeIcon,\n          className: \"edge-icon bottom-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-text\",\n        children: \"\\uB85C\\uB529\\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraPage, \"iSFzQp7i/2H8TQrUAvTkP1yl0sA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CameraPage;\nexport default CameraPage;\nvar _c;\n$RefreshReg$(_c, \"CameraPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","Webcam","NavBar","edgeIcon","jsxDEV","_jsxDEV","CameraPage","_s","webcamRef","navigate","location","loading","setLoading","message","setMessage","name","gender","age","contact","contactType","state","handleKeyDown","e","code","capture","window","addEventListener","removeEventListener","current","screenshot","getScreenshot","response","fetch","method","headers","body","JSON","stringify","image","result","json","status","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","videoConstraints","width","height","facingMode","mirrored","src","_c","$RefreshReg$"],"sources":["C:/Users/yiuri/OneDrive/문서/GitHub/temp_lemonshot/lemonshot-app2/src/pages/CameraPage/CameraPage.tsx"],"sourcesContent":["// CameraPage.tsx\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport NavBar from '../../components/NavBar.tsx';\r\nimport './CameraPage.css';\r\nimport edgeIcon from '../../assets/images/edge.svg';\r\n\r\nconst CameraPage = () => {\r\n  const webcamRef = useRef<Webcam>(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\r\n\r\n  const { name, gender, age, contact, contactType } = location.state || {};\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.code === \"Space\" && !loading) {\r\n        capture();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [loading]);\r\n\r\n  const capture = async () => {\r\n    if (!webcamRef.current) return;\r\n    const screenshot = webcamRef.current.getScreenshot();\r\n\r\n    if (!screenshot) {\r\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage(\"⏳ 로딩중...\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/analyze_face\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          image: screenshot,\r\n          name,\r\n          gender,\r\n          age,\r\n          contact,\r\n          contactType\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.status === \"success\") {\r\n        setMessage(\"✅ 로딩 완료!\");\r\n        setTimeout(() => {\r\n          navigate(\"/success\", {\r\n            state: { name, gender, age, contact, contactType }\r\n          });\r\n        }, 1500);\r\n      } else {\r\n        setMessage(\"❌ 분석 실패: 얼굴을 찾을 수 없습니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"서버 오류:\", error);\r\n      setMessage(\"❌ 서버 오류가 발생했습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"camera-page-wrapper\">\r\n      <NavBar />\r\n      <div className=\"camera-page\">\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          videoConstraints={{ width: 1280, height: 720, facingMode: \"user\" }}\r\n          className=\"webcam\"\r\n          mirrored = {true}\r\n          \r\n        />\r\n\r\n        <div className=\"capture-area\">\r\n          <img src={edgeIcon} className=\"edge-icon top-left\" />\r\n          <img src={edgeIcon} className=\"edge-icon top-right\" />\r\n          <img src={edgeIcon} className=\"edge-icon bottom-right\" />\r\n          <img src={edgeIcon} className=\"edge-icon bottom-left\" />\r\n        </div>\r\n\r\n        <div className=\"overlay\" />\r\n\r\n        <p className=\"message\">{message}</p>\r\n\r\n        {loading && (\r\n          <p className=\"loading-text\">로딩중...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}