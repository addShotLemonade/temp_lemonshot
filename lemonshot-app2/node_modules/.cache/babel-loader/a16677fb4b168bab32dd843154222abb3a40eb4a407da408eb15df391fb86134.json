{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yiuri\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\temp_lemonshot\\\\lemonshot-app2\\\\src\\\\pages\\\\CameraPage\\\\CameraPage.tsx\",\n  _s = $RefreshSig$();\n// pages/ConsentPage.tsx\n// src/pages/CameraPage/CameraPage.tsx\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport NavBar from '../../components/NavBar.tsx';\nimport './CameraPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraPage = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\n  const {\n    name,\n    gender,\n    age,\n    contact,\n    contactType\n  } = location.state || {};\n\n  // 스페이스바 눌렀을 때 캡처 실행\n  const handleKeyDown = async e => {\n    if (e.code === \"Space\" && !loading) {\n      await capture();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", e => {\n      if (e.code === \"Space\" && !loading) {\n        capture();\n      }\n    });\n    return () => {\n      window.removeEventListener(\"keydown\", () => {});\n    };\n  }, [loading]);\n\n  // 얼굴 캡처 후 서버로 전송\n  const capture = async () => {\n    if (!webcamRef.current) return;\n    const screenshot = webcamRef.current.getScreenshot();\n    if (!screenshot) {\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\n      return;\n    }\n    setLoading(true);\n    setMessage(\"⏳ 얼굴 분석 중입니다...\");\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze_face\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: screenshot,\n          name: \"홍길동\",\n          // 필요 시 전역 상태에서 불러오기\n          gender: \"male\",\n          age: 25\n        })\n      });\n      const result = await response.json();\n      if (result.best_match) {\n        setMessage(\"✅ 벡터 분석 완료! 이동합니다...\");\n        setTimeout(() => navigate(\"/success\"), 1500);\n      } else {\n        setMessage(\"❌ 분석 실패: 얼굴을 찾을 수 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"서버 오류:\", error);\n      setMessage(\"❌ 서버 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Camera Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"webcam-container\",\n        children: /*#__PURE__*/_jsxDEV(Webcam, {\n          audio: false,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          width: 640,\n          height: 480\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CameraPage, \"iSFzQp7i/2H8TQrUAvTkP1yl0sA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CameraPage;\nexport default CameraPage;\nvar _c;\n$RefreshReg$(_c, \"CameraPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","Webcam","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraPage","_s","webcamRef","navigate","location","loading","setLoading","message","setMessage","name","gender","age","contact","contactType","state","handleKeyDown","e","code","capture","window","addEventListener","removeEventListener","current","screenshot","getScreenshot","response","fetch","method","headers","body","JSON","stringify","image","result","json","best_match","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","audio","ref","screenshotFormat","width","height","_c","$RefreshReg$"],"sources":["C:/Users/yiuri/OneDrive/문서/GitHub/temp_lemonshot/lemonshot-app2/src/pages/CameraPage/CameraPage.tsx"],"sourcesContent":["// pages/ConsentPage.tsx\r\n// src/pages/CameraPage/CameraPage.tsx\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport NavBar from '../../components/NavBar.tsx';\r\nimport './CameraPage.css';\r\n\r\nconst CameraPage = () => {\r\n  const webcamRef = useRef<Webcam>(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"스페이스바를 눌러 얼굴을 캡처하세요.\");\r\n  const { name, gender, age, contact, contactType } = location.state || {};\r\n  \r\n  // 스페이스바 눌렀을 때 캡처 실행\r\n  const handleKeyDown = async (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.code === \"Space\" && !loading) {\r\n      await capture();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", (e: KeyboardEvent) => {\r\n      if (e.code === \"Space\" && !loading) {\r\n        capture();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", () => {});\r\n    };\r\n  }, [loading]);\r\n\r\n  // 얼굴 캡처 후 서버로 전송\r\n  const capture = async () => {\r\n    if (!webcamRef.current) return;\r\n\r\n    const screenshot = webcamRef.current.getScreenshot();\r\n\r\n    if (!screenshot) {\r\n      setMessage(\"❌ 얼굴을 인식하지 못했습니다.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage(\"⏳ 얼굴 분석 중입니다...\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/analyze_face\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          image: screenshot,\r\n          name: \"홍길동\", // 필요 시 전역 상태에서 불러오기\r\n          gender: \"male\",\r\n          age: 25\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.best_match) {\r\n        setMessage(\"✅ 벡터 분석 완료! 이동합니다...\");\r\n        setTimeout(() => navigate(\"/success\"), 1500);\r\n      } else {\r\n        setMessage(\"❌ 분석 실패: 얼굴을 찾을 수 없습니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"서버 오류:\", error);\r\n      setMessage(\"❌ 서버 오류가 발생했습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n\r\n      <div className=\"camera-page\">\r\n        <h2>Camera Page</h2>\r\n\r\n        <div className=\"webcam-container\">\r\n          <Webcam\r\n            audio={false}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            width={640}\r\n            height={480}\r\n          />\r\n        </div>\r\n\r\n        <p className=\"message\">{message}</p>\r\n\r\n        {loading && <div className=\"loader\">로딩 중...</div>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CameraPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}